package day2;

public class MyArrayQueue implements IStackQueue{
	private int[] array;
	private int SIZE;
	private int head, tail;
	public MyArrayQueue(int size) {
		this.SIZE = size;
		array = new int[SIZE];
		head = tail = -1;
	}
	@Override
	public boolean push(int value) {
		// TODO Auto-generated method stub
		if(!this.isFull()) {
			if(this.isEmpty()) {
				head++;
			}
			tail++;
			array[tail] = value;
			return true;
		}
		return false;
	}
	@Override
	public int pop() {
		// TODO Auto-generated method stub
		int value = -1;
		if(!isEmpty()) {
			value = array[head];
			head++;
			if(head > tail) {
				head = tail = -1;
			}
		}
		return value;
	}
	@Override
	public boolean isFull() {
		// TODO Auto-generated method stub
		return tail == this.SIZE - 1;
	}
	@Override
	public boolean isEmpty() {
		// TODO Auto-generated method stub
		return head == -1 && tail == -1;
	}
	public int count() {
		if(isEmpty()) {
			return 0;
		}
		return tail - head + 1;
	}
	@Override
	public void show() {
		// TODO Auto-generated method stub
		if(this.isEmpty()) {
			System.out.println("Queue is empty");
			return;
		}
		for(int i = tail; i >= head; i--) {
			System.out.print(array[i] + " ");
		}
		System.out.println();
		
	}
}
