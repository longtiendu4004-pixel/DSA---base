package next.neetcode;

public class Linkedlist {
	public Node head;
	
	public Linkedlist(Node head) {
		this.head = head;
	}
	public void printLinkedList() {
		if(head == null) {
			System.out.print("List is empty");
		}
		Node curr = head;
		while(curr != null) {
			System.out.print(curr.data);
			curr = curr.next;
			if(curr != null) {
				System.out.print(" --> ");
			}
		}
	}
	public boolean search(int data) {
		if(head == null) {
			return false;
		}
		Node curr = head;
		while(curr != null) {
			if(curr.data == data) {
				return true;
			}
			curr = curr.next;
		}
		return false;
	}
	public void insertAtHead(int data) {
		Node newNode = new Node(data);
		newNode.next = head;
		head = newNode;
	}
	public void insertAtTail(int data) {
		Node newNode = new Node(data);
		if(head == null) {
			head = newNode;
			return;
		}
		Node curr = head;
		while(curr.next != null) {
			curr = curr.next;
		}
		curr.next = newNode;
	}
	public void insertAtPosition(int index, int data) {
		if(index < 0) {
			return;
		}
		if(index == 0) {
			this.insertAtHead(data);
			return;
		}
		Node curr = head;
		for(int i = 0; i < index - 1 && curr != null; i++) {
			curr = curr.next;
		}
		if(curr == null) {
			return;
		}
		Node newNode = new Node(data);		
		newNode.next = curr.next;
		curr.next = newNode;
		
	}
}
