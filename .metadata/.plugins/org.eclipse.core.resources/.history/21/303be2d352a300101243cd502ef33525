package day2;

import day1.Node;

public class MyLinkedListQueue implements IStackQueue {
	Node head, tail;
	public MyLinkedListQueue() {
		head = tail = null;
	}
	@Override
	public boolean push(int value) {
		// TODO Auto-generated method stub
		if(!isFull()) {
			Node newNode = new Node(value);
			if(isEmpty()) {
				head = tail = newNode;
				return true;
			}else {
				Node curr = head;
				while(curr.next != null) {
					curr = curr.next;
				}
				curr.next = newNode;
				tail = curr.next;
			}
			return true;
		}
		return false;
	}

	@Override
	public int pop() {
		// TODO Auto-generated method stub
		if(!isEmpty()) {
			int value = head.data;
			if(head == tail) {
				head = tail = null;
			}else {
				head = head.next;
			}
			return value;
		}
		return -1;
	}

	@Override
	public boolean isFull() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean isEmpty() {
		// TODO Auto-generated method stub
		return tail == null && head == null;
	}

	@Override
	public void show() {
		// TODO Auto-generated method stub
		if(isEmpty()) {
			System.out.println("Queue is empty");
			return;
		}
		Node curr = head;
		while(curr != null) {
			System.out.print(curr.data + " ");
			curr = curr.next;
		}
		System.out.println();
		
	}
	
}
