package day5;
import java.util.*;
public class leetcode167 {
	// c√°ch 1:
	//time complexity : 0(n)
	//space complecity : 0(n)
//	public static int[] twoSum(int[] numbers, int target) {
//        Map<Integer, Integer> part = new HashMap<>();
//        int[] count = new int[2];
//        for(int i = 0; i < numbers.length; i++) {
//        	int diff = target - numbers[i];
//        	if(part.containsKey(diff) && i != part.get(diff)) {
//        		count[0] = part.get(diff);
//        		count[1] = i;
//        	}else {
//        		part.put(numbers[i], i);
//        	}
//        }
//		return count;
//    }
	public static int[] twoSum(int[] numbers, int target) {
		int left = 0;
		int right = numbers.length - 1;
		while(right > left) {
			int sum = left + right;
			if(sum < target) {
				left++;
			}else if(sum > target) {
				right--;
			}else {
				return new int[] {left, right};
			}
		}
		return new int[0];
	}
	public static void main(String[] strsdsasfFf) {
		int[] a = {2, 7, 11, 15};
		int target = 13;
		System.out.print(Arrays.toString(twoSum(a, target)));
	}
}
